% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ddd.R
\name{ddd}
\alias{ddd}
\title{Doubly Robust DDD estimators for the ATT and beyond}
\usage{
ddd(
  yname,
  tname,
  idname,
  dname,
  gname,
  partition_name,
  xformla,
  data,
  control_group = NULL,
  base_period = NULL,
  est_method = "trad",
  learners = NULL,
  n_folds = NULL,
  weightsname = NULL,
  boot = FALSE,
  boot_type = "multiplier",
  nboot = NULL,
  inffunc = FALSE,
  skip_data_checks = FALSE
)
}
\arguments{
\item{yname}{The name of the outcome variable.}

\item{tname}{The name of the column containing the time periods.}

\item{idname}{The name of the column containing the unit id.}

\item{dname}{The name of the column containing the treatment indicator dummy (1 if treated in the post-treatment period, 0 otherwise).
It is mutually exclusive with \code{gname}. If \code{dname} is provided, \code{gname} is ignored.}

\item{gname}{The name of the column containing the first period when a particular observation is treated. It is a positive number
for treated units and defines which group the unit belongs to. It takes value 0 or Inf for untreated units. If \code{gname} is specified,
we assume that the treatment is staggered. It is mutually exclusive with \code{dname}. If \code{gname} is provided, \code{dname} is ignored.}

\item{partition_name}{The name of the column containing the partition variable (e.g., the subgroup identifier). This is an indicator variable that is 1 for
the units targeted for treatment and 0 otherwise.}

\item{xformla}{The formula for the covariates to be included in the model. It should be of the form \code{~ x1 + x2}.
Default is \code{xformla = ~1} (no covariates).}

\item{data}{A data frame or data table containing the data.}

\item{control_group}{The control group to be used in the estimation. Default is \code{control_group = "notyettreated"} which sets as control group the units that have not yet participated in the treatment.
The alternative is \code{control_group = "nevertreated"} which sets as control group the units that never participate in the treatment and does not change across groups or time periods.}

\item{base_period}{Choose between a "varying" or "universal" base period. Both yield the same post-treatment ATT(g,t) estimates.
Varying base period: Computes pseudo-ATT in pre-treatment periods by comparing outcome changes for a group to its comparison group from t-1 to t, repeatedly changing t.
Universal base period: Fixes the base period to (g-1), reporting average changes from t to (g-1) for a group relative to its comparison group, similar to event study regressions.
Varying base period reports ATT(g,t) right before treatment. Universal base period normalizes the estimate before treatment to be 0, adding one extra estimate in an earlier period.}

\item{est_method}{The estimation method to be used. Default is \code{"trad"} (traditional). It computes propensity score using logistic regression
and outcome regression using OLS. The alternative is \code{"dml"} (double machine learning). It allows the user to compute propensity score using a
machine learning algorithm and outcome regression using a different machine learning algorithm. We provide some wrappers for popular learners but
the user can also provide their own learner. See our vignette on How to construct a use-provided learner for more details (TODO).}

\item{learners}{A list of learners to be used in the estimation. It should be a list of two elements,
the first element being the learner for the propensity score and the second element being the learner for the outcome regression.
Default is \code{NULL}, then OLS and MLE Logit is used to estimate nuisances parameters. If \code{est_method = "dml"}, user have to specify \code{learners}.}

\item{n_folds}{The number of folds to be used in the cross-fitting. Default is \code{NULL}. If \code{est_method = "dml"}, user have to specify \code{n_folds}.}

\item{weightsname}{The name of the column containing the weights. Default is \code{NULL}.}

\item{boot}{Logical. If \code{TRUE}, the function computes the bootstrap standard errors. Default is \code{FALSE}.}

\item{boot_type}{The type of bootstrap to be used. Default is \code{"multiplier"}. This is valid when \code{boot = TRUE}.}

\item{nboot}{The number of bootstrap samples to be used. Default is \code{NULL}. If \code{boot = TRUE}, the default is \code{nboot = 999}.}

\item{inffunc}{Logical. If \code{TRUE}, the function returns the influence function. Default is \code{FALSE}.}

\item{skip_data_checks}{Logical. If \code{TRUE}, the function skips the data checks and go straight to estimation. Default is \code{FALSE}.}
}
\value{
A list with the following elements:
\item{ATT}{The average treatment effect on the treated.}
\item{se}{The standard error of the ATT.}
\item{uci}{The upper confidence interval of the ATT.}
\item{lci}{The lower confidence interval of the ATT.}
\item{inf.func}{The estimate of the influence function.}
}
\description{
\code{ddd} is the main function for computing the Doubly Robust DDD estimators for the ATT, with panel data.
It can be used with covariates and/or under multiple time periods. At its core, \code{triplediff} employs
the doubly robust estimator for the ATT, which is a combination of the propensity score weighting and the outcome regression.
Furthermore, this package supports the application of machine learning methods for the estimation of the nuisance functions.
}
\details{
TBA
}
\examples{
#----------------------------------------------------------
# Triple Diff with covariates and 2 time periods
#----------------------------------------------------------
seed = 123
num_ids = 500
time = 2
initial.year = 2019
treatment.year = 2020

sim_data = generate_test_panel(seed = seed,
                              num_ids = num_ids,
                              time = time,
                              initial.year = initial.year,
                              treatment.year = treatment.year)

ddd(yname = "outcome", tname = "year", idname = "id", dname = "treat",
    gname = NULL, partition_name = "partition", xformla = ~x1 + x2,
    data = sim_data, control_group = NULL,
    est_method = "trad")

#----------------------------------------------------------
# DML Triple Diff with covariates and 2 time periods
#----------------------------------------------------------
library(mlr3)
library(mlr3learners)

learner_rf <- lrn("classif.ranger", predict_type = "prob", num.trees = 100,
                 min.node.size = 1, importance = 'impurity')

learner_regr <- lrn("regr.xgboost")

learners <- list(ml_pa = learner_rf, ml_md = learner_regr)

ddd(yname = "outcome", tname = "year", idname = "id", dname = "treat",
    gname = NULL, partition_name = "partition", xformla = ~x1 + x2,
    data = sim_data, control_group = NULL,
    est_method = "dml", learners = learners, n_folds = 3)

#----------------------------------------------------------
# Triple Diff with multiple time periods
#----------------------------------------------------------
data <- gen_dgp_mult_periods(size = 1000, tperiods = 4, dgp_type = 1)

ddd(yname = "Y", tname = "period", idname = "id", dname = NULL,
gname = "G", partition_name = "L", xformla = ~X,
data = data, control_group = "nevertreated", base_period = "varying",
est_method = "trad")

#----------------------------------------------------------
# DML Triple Diff with multiple time periods
#----------------------------------------------------------

}
